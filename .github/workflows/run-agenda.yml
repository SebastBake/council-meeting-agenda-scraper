# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Generate Agenda Database

on:
  push:
    branches: ["test-actions"] # FIXME: replace with 'main'
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Set up Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable
      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.8.3 
          poetry install --with dev
      - name: Get latest successful run ID
        id: get_latest_run_id
        run: |
          CURRENT_BRANCH=$(git branch --show-current)
          echo "CURRENT_BRANCH=$CURRENT_BRANCH" >> $GITHUB_ENV
          LATEST_RUN_ID=$(gh run list --workflow='${{ github.workflow }}' --branch=$CURRENT_BRANCH --json databaseId --jq '.[0].databaseId')
          echo "LATEST_RUN_ID=$LATEST_RUN_ID" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download previous agenda from artefact repo
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: agendas.db
          path: ./agendas.db
          run-id: ${{ steps.get_latest_run_id.outputs.LATEST_RUN_ID }}

      - name: Display file structure
        run: ls
      - name: Generate new agenda
        run: |
          poetry run python ./aus_council_scrapers/main.py --council melbourne
      - name: Upload new agenda to artefact repo
        uses: actions/upload-artifact@v4
        with:
          overwrite: true
          name: agendas.db
          path: |
            ./agendas.db
